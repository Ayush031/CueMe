generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  provider      Provider
  // role     Role
  streams       Stream[]
  upvotes       Upvote[]
  CurrentStream CurrentStream[]
}

model Stream {
  id               String         @id @default(uuid())
  type             StreamType
  url              String
  extractedId      String
  upvotes          Upvote[]
  userId           String
  playedTimestamp  DateTime?
  createdTimestamp DateTime       @default(now())
  played           Boolean        @default(false)
  active           Boolean        @default(true)
  title            String         @default("")
  smlImg           String         @default("")
  bigImg           String         @default("")
  user             User           @relation(fields: [userId], references: [id])
  CurrentStream    CurrentStream?
}

model CurrentStream {
  userId   String  @id
  streamId String? @unique
  stream   Stream? @relation(fields: [streamId], references: [id])
  user     User    @relation(fields: [userId], references: [id])
}

model Upvote {
  id       String @id @default(uuid())
  userId   String
  streamId String
  user     User   @relation(fields: [userId], references: [id])
  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)

  @@unique([streamId, userId])
}

enum Provider {
  GOOGLE
}

enum Role {
  Streamer
  EndUser
}

enum StreamType {
  SPOTIFY
  YOUTUBE
}
